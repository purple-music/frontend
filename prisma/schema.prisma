// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
}

model Booking {
  title     String
  hour      Int
  studio    String
  createdAt DateTime @default(now())

  orderId String
  order   Order  @relation(fields: [orderId], references: [id])

  @@id([hour, studio])
}

model Order {
  id      String @id @default(cuid())
  payload String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  bookings Booking[]

  // userId String
  // user   User   @relation(fields: [userId], references: [id])
}

// model User {
//   id             String  @id @default(cuid())
//   email          String  @unique
//   name           String?
//   role           Role    @default(USER)
//   hashedPassword String

//   orders Order[]
// }

// enum Role {
//   USER
//   ADMIN
// }
